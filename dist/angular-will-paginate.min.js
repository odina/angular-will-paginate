/**
 * angular-will-paginate
 * @version v0.1.1 - 2013-12-21
 * @link https://github.com/heavysixer/angular-will-paginate
 * @author Mark Daggett <info@humansized.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
(function(g,h,k){angular.module("willPaginate",[]);angular.module("willPaginate").run(["$templateCache",function(a){a.put("template/will_paginate/paginator.html",'<ul class="{{options.paginationClass}}" ng-hide="params.totalPages == 1">  <li class="prev" ng-class="{true:\'disabled\'}[params.currentPage == 1]">    <a ng-hide="params.currentPage == 1" ng-click="getPage(params.currentPage - 1)">{{options.previousLabel}}</a>    <span ng-show="params.currentPage == 1">{{options.previousLabel}}</span>  </li>  <li ng-class="{active:params.currentPage == page.value, disabled:page.kind == \'gap\' }" ng-repeat-start="page in collection">    <span ng-show="params.currentPage == page.value || page.kind == \'gap\'">{{page.value}}</span>    <a ng-hide="params.currentPage == page.value || page.kind == \'gap\'" ng-click="getPage(page.value)">{{page.value}}</a>  </li>  <li ng-repeat-end></li>  <li class="next" ng-class="{true:\'disabled\'}[params.currentPage == params.totalPages]">    <a ng-hide="params.currentPage == params.totalPages" ng-click="getPage(params.currentPage + 1)">{{options.nextLabel}}</a>    <span ng-show="params.currentPage == params.totalPages">{{options.nextLabel}}</span>  </li></ul>')}]).directive("willPaginate",
function(){return{restrict:"ACE",templateUrl:"template/will_paginate/paginator.html",scope:{params:"=",config:"=",onClick:"="},controller:["$scope",function(a){a.getPage=function(c){if(a.onClick)a.onClick(c)}}],link:function(a){a.collection=[];a.defaults={paginationClass:"pagination",previousLabel:"Previous",nextLabel:"Next",innerWindow:1,outerWindow:1,linkSeperator:" ",paramName:"page",params:{},pageLinks:!0,container:!0};a.windowedPageNumbers=function(){var c=[],d=[],f=[],b;b=a.params.currentPage-
a.options.innerWindow;var e=a.params.currentPage+a.options.innerWindow;e>a.params.totalPages&&(b-=e-a.params.totalPages,e=a.params.totalPages);1>b&&(e+=1-b,b=1,e>a.params.totalPages&&(e=a.params.totalPages));for(;b<e+1;b++)d.push({value:b});if(a.options.outerWindow+3<d[0].value){for(b=1;b<a.options.outerWindow+1;b++)c.push({value:b});c.push({value:"\u2026",kind:"gap"})}else for(b=1;b<d[0].value;b++)c.push({value:b});if(a.params.totalPages-a.options.outerWindow-2>d[d.length-1].value)for(f.push({value:"\u2026",
kind:"gap"}),b=a.params.totalPages-a.options.outerWindow;b<a.params.totalPages;b++)f.push({value:b});else for(b=d[d.length-1].value+1;b<=a.params.totalPages;b++)f.push({value:b});return c.concat(d.concat(f))};a.render=function(){a.collection=a.windowedPageNumbers()};a.$watch("config",function(c){"undefined"!==typeof c&&(a.options=angular.extend(angular.copy(a.defaults,{}),angular.copy(c,{})),a.params.currentPage&&a.render())});a.$watch("params",function(c){"undefined"!==typeof c&&a.render()});a.$watch("params.currentPage",
function(c){"undefined"!==typeof c&&a.render()})}}})})(window,document);
